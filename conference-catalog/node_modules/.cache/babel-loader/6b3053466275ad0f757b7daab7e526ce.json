{"ast":null,"code":"var _jsxFileName = \"/Users/vitalyermakovich2/Documents/conference-catalog/src/components/AllConferences/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { css } from \"@emotion/core\";\nimport Conference from \"../Conference\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst AllConferences = () => {\n  _s();\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLoading(!loading),\n      children: \"Toggle Loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Conference, {\n      name: 'Qwer',\n      time: '15.10.2000'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: color,\n      loading: loading,\n      css: override,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllConferences, \"seaEM2XOjsxyl7PK3XOA1GtO+dM=\");\n\n_c = AllConferences;\nexport default AllConferences;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllConferences\");","map":{"version":3,"sources":["/Users/vitalyermakovich2/Documents/conference-catalog/src/components/AllConferences/index.tsx"],"names":["React","useState","css","Conference","ClipLoader","override","AllConferences","loading","setLoading","color","setColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAGA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,QAAQ,GAAGH,GAAI;AACrB;AACA;AACA;AACA,CAJA;;AAMA,MAAMI,cAAc,GAAG,MAAI;AAAA;;AACvB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,SAAD,CAAhC;AAEA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAMO,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE,MAAlB;AAA0B,MAAA,IAAI,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEE,KAAnB;AAA0B,MAAA,OAAO,EAAEF,OAAnC;AAA4C,MAAA,GAAG,EAAEF,QAAjD;AAA2D,MAAA,IAAI,EAAE;AAAjE;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAXD;;GAAMC,c;;KAAAA,c;AAaN,eAAeA,cAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport style from \"./styles\";\nimport { css } from \"@emotion/core\";\nimport Conference from \"../Conference\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst AllConferences = ()=>{\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ffffff\");\n\n    return(\n        <div>\n            <button onClick={() => setLoading(!loading)}>Toggle Loader</button>\n            <Conference name={'Qwer'} time={'15.10.2000'}/>\n            <ClipLoader color={color} loading={loading} css={override} size={150} />\n        </div>\n    )\n};\n\nexport default AllConferences;\n"]},"metadata":{},"sourceType":"module"}